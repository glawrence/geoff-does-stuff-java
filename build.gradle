plugins {
    // see https://docs.gradle.org/current/userguide/application_plugin.html
    id('application') // this includes the java & distribution plugins
}

group = 'com.geoffdoesstuff.java'
version = '0.1.0'

ext {
    junit5Version = '6.0.0-M1' //5.13.3 latest release
}

application {
    mainClass = 'com.geoffdoesstuff.java.MainDemoApp'
}

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(platform("org.junit:junit-bom:$junit5Version"))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

test {
    // needed for JUnit 5
    useJUnitPlatform()
    // execute tasks in parallel if possible
    maxParallelForks = 3
    testLogging {
        // if there is an exception in the tests, display the stack trace
        exceptionFormat = 'full'
        // this is a useful addition to get information for tests that do not fail (passed and skipped)
        events = [/*"passed",*/ 'skipped', 'failed']
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    // generate JavaDoc and put into a jar file
    withJavadocJar()
    // collect source code into a jar file
    withSourcesJar()
}

jar {
    manifest {
        // information to put into MANIFEST.MF in the jar file, does not apply to JavaDoc or Sources Jar files
        attributes('Main-Class': application.mainClass,
                   'Implementation-Title': project.name,
                   'Implementation-Version': project.version,
                   'Implementation-Vendor': 'Geoff Does Stuff')
    }
}

tasks.withType(JavaCompile).configureEach {
    options.deprecation = true // convenience property instead of adding '-Xlint:deprecation' via compilerArgs
    options.compilerArgs += ['-Xlint:unchecked']
}